#!/bin/bash

# 自動解析 kernel 版本
KERNEL=$(uname -r)
echo "[*] Detected Kernel Version: $KERNEL"

# 確認 searchsploit 是否存在
if ! command -v searchsploit &> /dev/null; then
    echo "[!] searchsploit not found. Please install ExploitDB package."
    exit 1
fi

# 搜尋符合 kernel 的 local exploit
echo "[*] Searching for local exploits matching: $KERNEL"
searchsploit "$KERNEL" | grep -i "linux" | grep -i "local" > results.txt

# 檢查是否有結果
if [ ! -s results.txt ]; then
    echo "[!] No exploits found for kernel $KERNEL"
    exit 1
fi

echo "[+] Found potential exploits:"
cat results.txt

# 詢問是否複製
read -p "[?] Copy matching exploits to current directory? (y/N): " COPY_CHOICE
if [[ "$COPY_CHOICE" =~ ^[Yy]$ ]]; then
    while IFS= read -r line; do
        path=$(echo "$line" | awk -F'|' '{print $2}' | sed 's/ *//g')
        if [ -n "$path" ]; then
            fullpath=$(searchsploit -p "$path" | awk -F':' '/Path:/{print $2}' | sed 's/^[ \t]*//')
            if [ -f "$fullpath" ]; then
                cp "$fullpath" .
                echo "[+] Copied: $(basename "$fullpath")"

                # 如果是 C 檔案，嘗試編譯
                if [[ "$fullpath" == *.c ]]; then
                    output_file=$(basename "$fullpath" .c)
                    gcc "$fullpath" -o "$output_file" -w
                    if [ $? -eq 0 ]; then
                        echo "    [✔] Compiled to: $output_file"
                    else
                        echo "    [✘] Failed to compile: $output_file"
                    fi
                fi
            fi
        fi
    done < results.txt
    echo "[+] All matching exploits processed."
fi
